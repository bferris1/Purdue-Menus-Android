apply plugin: "com.android.application"

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.2'

    useLibrary 'android.test.runner'
    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'

    defaultConfig {
        applicationId "com.moufee.purduemenus"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 32
        versionName "1.2.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = false
        resConfigs "en", "fr"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro", "moshi.pro"
        }
        debug {
            applicationIdSuffix ".debug"
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro", "moshi.pro"
        }
    }
    productFlavors {
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
        incremental = true
    }
    testOptions {
        unitTests.includeAndroidResources = true
    }
    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }
}

dependencies {

    def lifecycle_version = "2.1.0"
    def room_version = "2.1.0"
    def dagger_version = "2.25.2"
    def work_version = "2.2.0"

    implementation fileTree(include: ["*.jar"], dir: "libs")
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0-alpha4', {
        exclude group: "com.android.support", module: "support-annotations"
        exclude group: "com.google.code.findbugs", module: "jsr305"

    })

    implementation "androidx.appcompat:appcompat:1.1.0"
    implementation "com.google.android.material:material:1.0.0"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation "androidx.annotation:annotation:1.1.0"
    implementation "androidx.preference:preference:1.1.0"
    implementation "androidx.fragment:fragment-ktx:1.1.0"
    implementation "androidx.core:core-ktx:1.1.0"


    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0-rc02'

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.0-M1'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.0-M1'

    androidTestImplementation 'androidx.test:core:1.2.0'

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    androidTestImplementation "androidx.room:room-testing:$room_version"

    // Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:$work_version"
    // optional - Test helpers
    androidTestImplementation "androidx.work:work-testing:$work_version"

    implementation "com.squareup.retrofit2:retrofit:2.6.2"
    implementation "com.squareup.okhttp3:okhttp:3.12.0"
    implementation "com.squareup.moshi:moshi:1.8.0"
    implementation "com.squareup.moshi:moshi-kotlin:1.8.0"
    implementation "com.squareup.retrofit2:converter-moshi:2.5.0"


    // Core library
    androidTestImplementation 'androidx.test:core:1.2.0'


    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'

    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.ext:truth:1.2.0'
    testImplementation 'com.google.truth:truth:0.44'

    implementation 'com.jakewharton.timber:timber:4.7.1'


//    // Espresso dependencies
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
//    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.1.1'
//    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.1.1'
//    androidTestImplementation 'androidx.test.espresso:espresso-accessibility:3.1.1'
//    androidTestImplementation 'androidx.test.espresso:espresso-web:3.1.1'
//    androidTestImplementation 'androidx.test.espresso.idling:idling-concurrent:3.1.1'


    implementation "joda-time:joda-time:2.9.9"
    testImplementation "junit:junit:4.12"
    testImplementation 'org.mockito:mockito-core:3.0.0'

    implementation 'com.github.franmontiel:PersistentCookieJar:v1.0.1'


    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
//apply plugin: 'com.google.gms.google-services'